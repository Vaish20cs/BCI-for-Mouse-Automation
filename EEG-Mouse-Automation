// Basic demo for accelerometer readings from Adafruit MPU6050

#include <Adafruit_MPU6050.h>
#include <Adafruit_Sensor.h>
#include <Wire.h>
#include <BleCombo.h>

Adafruit_MPU6050 mpu;


bool mouse_pressed=LOW;
bool button_pressed=LOW;

int mouse_press_cnt = 0;


bool zoomed_in=LOW;
bool zoomed_out=LOW;

int eegPin=A14;
int eegValue;
void setup(void) 
{
  Serial.begin(115200);
 

  Serial.println("Starting BLE work!");
 
    Keyboard.begin();
  Mouse.begin();
  

  Serial.println("Adafruit MPU6050 test!");

  // Try to initialize!
  if (!mpu.begin()) {
    Serial.println("Failed to find MPU6050 chip");
    while (1) {
      delay(10);
    }
  }
  Serial.println("MPU6050 Found!");

  mpu.setAccelerometerRange(MPU6050_RANGE_8_G);
  Serial.print("Accelerometer range set to: ");
  switch (mpu.getAccelerometerRange()) {
  case MPU6050_RANGE_2_G:
    Serial.println("+-2G");
    break;
  case MPU6050_RANGE_4_G:
    Serial.println("+-4G");
    break;
  case MPU6050_RANGE_8_G:
    Serial.println("+-8G");
    break;
  case MPU6050_RANGE_16_G:
    Serial.println("+-16G");
    break;
  }
  mpu.setGyroRange(MPU6050_RANGE_500_DEG);
  Serial.print("Gyro range set to: ");
  switch (mpu.getGyroRange()) {
  case MPU6050_RANGE_250_DEG:
    Serial.println("+- 250 deg/s");
    break;
  case MPU6050_RANGE_500_DEG:
    Serial.println("+- 500 deg/s");
    break;
  case MPU6050_RANGE_1000_DEG:
    Serial.println("+- 1000 deg/s");
    break;
  case MPU6050_RANGE_2000_DEG:
    Serial.println("+- 2000 deg/s");
    break;
  }

  mpu.setFilterBandwidth(MPU6050_BAND_21_HZ);
  Serial.print("Filter bandwidth set to: ");
  switch (mpu.getFilterBandwidth()) {
  case MPU6050_BAND_260_HZ:
    Serial.println("260 Hz");
    break;
  case MPU6050_BAND_184_HZ:
    Serial.println("184 Hz");
    break;
  case MPU6050_BAND_94_HZ:
    Serial.println("94 Hz");
    break;
  case MPU6050_BAND_44_HZ:
    Serial.println("44 Hz");
    break;
  case MPU6050_BAND_21_HZ:
    Serial.println("21 Hz");
    break;
  case MPU6050_BAND_10_HZ:
    Serial.println("10 Hz");
    break;
  case MPU6050_BAND_5_HZ:
    Serial.println("5 Hz");
    break;
  }

  Serial.println("");
  delay(100);


  pinMode(eegPin,INPUT);

}

void loop() 
{
 

  if(Keyboard.isConnected()) 
  {

  

 
  mouse_func(); 
  eegRead(); 

     
  if (digitalRead(5) == HIGH)
  {
    Serial.println("d4 pressed");
    Keyboard.press(KEY_LEFT_CTRL);
    // delay(10);
    Keyboard.press(KEY_Z);
    // Keyboard.press(KEY_DELETE);
    delay(100);
    Keyboard.releaseAll();
    delay(300);
    // delay(1);
  }


  mouse_func();  
  
  /* Get new sensor events with the readings */
  sensors_event_t a, g, temp;
  mpu.getEvent(&a, &g, &temp);


  Serial.println("");

// up down
  if ( (a.acceleration.x<2 && eegValue<0.5) && (a.acceleration.x>-2 && eegValue>0.2) )
  {
    Serial.println("no movements");
  }
  if (a.acceleration.x>2 && eegValue<0.5)
  {
    Serial.println("down");
    Mouse.move(0,-10); 
  }
  if (a.acceleration.x<-2 && eegValue>0.2)
  {
    Serial.println("up");
    Mouse.move(0,10);
  }
// updown

// left right
  if ( (a.acceleration.y<2 && eegValue<0.9) && (a.acceleration.y>-2 && eegValue>0.1) )
  {
    Serial.println("no movements");
  }
  if (a.acceleration.y>2 && eegValue<0.9)
  {
      Serial.println("left");
      Mouse.move(-10,0);
  }
  if (a.acceleration.y<-2 && eegValue>0.1)
  {
      Serial.println("right");
      Mouse.move(10,0);
  }
  
  
// left right



  delay(50);
  }
}


void eegRead()
{
  eegValue=analogRead(eegPin);
  Serial.println(eegValue);
}
  
